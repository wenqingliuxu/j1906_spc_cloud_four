<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.j1906.mapper.EmpMapper" >
  <resultMap id="BaseResultMap" type="com.qf.j1906.pojo.Emp" >
    <id column="empno" property="empno" jdbcType="INTEGER" />
    <result column="ename" property="ename" jdbcType="VARCHAR" />
    <result column="sal" property="sal" jdbcType="DOUBLE" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="deptno" property="deptno" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    empno, ename, sal, job, deptno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.j1906.pojo.EmpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from emp
    where empno = #{empno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from emp
    where empno = #{empno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.j1906.pojo.EmpExample" >
    delete from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.j1906.pojo.Emp" >
    insert into emp (empno, ename, sal, 
      job, deptno)
    values (#{empno,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{sal,jdbcType=DOUBLE}, 
      #{job,jdbcType=VARCHAR}, #{deptno,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.j1906.pojo.Emp" >
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="empno != null" >
        empno,
      </if>
      <if test="ename != null" >
        ename,
      </if>
      <if test="sal != null" >
        sal,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="deptno != null" >
        deptno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="empno != null" >
        #{empno,jdbcType=INTEGER},
      </if>
      <if test="ename != null" >
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="sal != null" >
        #{sal,jdbcType=DOUBLE},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        #{deptno,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.j1906.pojo.EmpExample" resultType="java.lang.Integer" >
    select count(*) from emp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update emp
    <set >
      <if test="record.empno != null" >
        empno = #{record.empno,jdbcType=INTEGER},
      </if>
      <if test="record.ename != null" >
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.sal != null" >
        sal = #{record.sal,jdbcType=DOUBLE},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.deptno != null" >
        deptno = #{record.deptno,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update emp
    set empno = #{record.empno,jdbcType=INTEGER},
      ename = #{record.ename,jdbcType=VARCHAR},
      sal = #{record.sal,jdbcType=DOUBLE},
      job = #{record.job,jdbcType=VARCHAR},
      deptno = #{record.deptno,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.j1906.pojo.Emp" >
    update emp
    <set >
      <if test="ename != null" >
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="sal != null" >
        sal = #{sal,jdbcType=DOUBLE},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="deptno != null" >
        deptno = #{deptno,jdbcType=INTEGER},
      </if>
    </set>
    where empno = #{empno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.j1906.pojo.Emp" >
    update emp
    set ename = #{ename,jdbcType=VARCHAR},
      sal = #{sal,jdbcType=DOUBLE},
      job = #{job,jdbcType=VARCHAR},
      deptno = #{deptno,jdbcType=INTEGER}
    where empno = #{empno,jdbcType=INTEGER}
  </update>
    <insert id="insertEmp" >
    <selectKey keyProperty="empno" keyColumn="empnp" order="AFTER">
      select last_insert_id()
    </selectKey>
     insert into emp (ename, sal,job, deptno)
     values (#{ename,jdbcType=VARCHAR}, #{sal,jdbcType=DOUBLE},
      #{job,jdbcType=VARCHAR}, #{deptno,jdbcType=INTEGER})
  </insert>
</mapper>